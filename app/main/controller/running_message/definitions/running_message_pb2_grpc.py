# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import running_message_pb2 as running__message__pb2


class RunningMessageStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
        """Constructor.

    Args:
      channel: A grpc.Channel.
    """
        self.GetRunningMessage = channel.unary_unary(
            "/RunningMessage/GetRunningMessage",
            request_serializer=running__message__pb2.RunningDetails.SerializeToString,
            response_deserializer=running__message__pb2.RunningMessageResponse.FromString,
        )
        self.LogRunningMetrics = channel.stream_unary(
            "/RunningMessage/LogRunningMetrics",
            request_serializer=running__message__pb2.RunningMetrics.SerializeToString,
            response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
        self.GetRunningMetrics = channel.unary_stream(
            "/RunningMessage/GetRunningMetrics",
            request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            response_deserializer=running__message__pb2.RunningMetrics.FromString,
        )


class RunningMessageServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def GetRunningMessage(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def LogRunningMetrics(self, request_iterator, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetRunningMetrics(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_RunningMessageServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "GetRunningMessage": grpc.unary_unary_rpc_method_handler(
            servicer.GetRunningMessage,
            request_deserializer=running__message__pb2.RunningDetails.FromString,
            response_serializer=running__message__pb2.RunningMessageResponse.SerializeToString,
        ),
        "LogRunningMetrics": grpc.stream_unary_rpc_method_handler(
            servicer.LogRunningMetrics,
            request_deserializer=running__message__pb2.RunningMetrics.FromString,
            response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        ),
        "GetRunningMetrics": grpc.unary_stream_rpc_method_handler(
            servicer.GetRunningMetrics,
            request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            response_serializer=running__message__pb2.RunningMetrics.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "RunningMessage", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))
